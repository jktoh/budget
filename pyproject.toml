[tool.poetry]
name = "aws-py-langserve"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [
    { include = "app" },
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["standard"], version = "^0.115.0"}
numpy = "^2.1.1"
python-dateutil = "^2.9.0.post0"
sqlmodel = "^0.0.22"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.7"


[tool.poetry.group.pulumi]
optional = true

[tool.poetry.group.pulumi.dependencies]
pulumi-aws = "^6.52.0"
pulumi-docker = "^4.5.5"

[tool.ruff.lint]
select = [
  "F", # Pyflakes
  "E", "W", # pycodestyle
  "C90", # mmcabe
  "I", # isort
  "N", # pep8-naming
  "D", # pydocstyle
  "UP", # pyupgrade
  "YTT", # flake8-2020
  "ANN", # flake8-annotations
  "ASYNC", # flake8-async
  "S", # flake8-bandit
  "BLE", # flake8-blind-except
  "FBT", # flake8-boolean-trap
  "B", # flake8-bugbear
  "A", # flake8-builtins
  "COM", # flake8-commas
  "C4", # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "T10", # flake8-debugger
  "DJ", # flake8-django
  "EM", # flake8-errmsg
  "EXE", # flake8-executable
  "FA", # flake8-future-annotations
  "ISC", # flake8-implicit-str-concat
  "ICN", # flake8-import-conventions
  "LOG", # flake8-logging
  "G", # flake8-logging-format
  "INP", # flake8-no-pep420
  "PIE", # flake8-pie
  "T20", # flake8-print
  "PYI", # flake8-pyi
  "PT", # flake8-pytest-style
  "Q", # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SLOT", # flake8-slots
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
  "TCH", # flake8-type-checking
  "INT", # flake8-gettext
  "ARG", # flake8-unused-arguments
  "PTH", # flake8-use-pathlib
  "TD", # flake8-todos
  "FIX", # flake8-fixme
  "ERA", # eradicate
  "PD", # pandas-vet
  "PGH", # pygrep-hooks
  "PL", # Pylint   
  "TRY", # tryceratops
  "FLY", # flynt    
  "NPY", # NumPy-specific rules
  "FAST", # FastAPI
  "AIR", # Airflow
  "PERF", # Perflint
  "FURB", # refurb
  "DOC", # pydoclint     
  "RUF", # Ruff-specific rules
]
ignore = ["D100", "D103"]
preview = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
